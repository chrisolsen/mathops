local dirtylarry = require('src/res/dirtylarry')
local Game = require('src/game')
local State = Game.State

function init(self)
	msg.post('.', 'acquire_input_focus')
	self.operator = '+'
	self.question_count = 25

	local this = gui.get_node("options:root")
	gui.set_color(this, vmath.vector4(0))
	gui.animate(this, gui.PROP_COLOR, vmath.vector4(1, 1, 1, 1), gui.EASING_OUTEXPO, .5, 0)
end

function final(_)
	msg.post('.', 'release_input_focus')
end

function on_input(self, action_id, action)
	-- run twice to ensure the previous value is cleared
	for _ = 0, 1 do
		self.operator = dirtylarry:radio('op_add', action_id, action, '+', self.operator)
		self.operator = dirtylarry:radio('op_minus', action_id, action, '-', self.operator)
		self.operator = dirtylarry:radio('op_times', action_id, action, 'x', self.operator)
		self.operator = dirtylarry:radio('op_divide', action_id, action, '/', self.operator)
	end

	self.question_count = dirtylarry:slider('question_count_slider', action_id, action, self.question_count, 1, 50)
	local count = gui.get_node('question_count:count')
	gui.set_text(count, tostring(self.question_count))

	onTouch(action_id, action, {
		['btn:play/button_bg'] = function()
			State.setValues({
				operator = self.operator,
				question_count = self.question_count
			})
			msg.post('main:/scenes#controller', 'change', { dest = 'game' })
			msg.post("#", "disable")
		end,
		['template/topbar_back'] = function()
			msg.post('main:/scenes#controller', 'change', { dest = 'landing' })
		end
	})
end

require 'src/common'
local gameState = require('src/state')

ROOT_ID = 'default:/root#root'

function load_proxy(self, proxy_id)
    if self.current_proxy ~= nil then
        msg.post(self.current_proxy, 'unload')
    end
    msg.post(proxy_id, 'load')
    self.current_proxy = proxy_id
end

function init(self)
    msg.post('.', 'acquire_input_focus')
    msg.post('@render:', 'use_fixed_fit_projection', { near = -1, far = 1 })
    load_proxy(self, '#landing_proxy')

    self.current_proxy = nil
end

function on_message(self, message_id, message, sender)
    if message_id == hash('proxy_loaded') then
        msg.post(sender, 'init')
        msg.post(sender, 'enable')
        return
    end

    if hash('action') == message_id then
        if message.action == 'landing:load' then
            gameState.setRoute('landing')
            load_proxy(self, '#landing_proxy')

        elseif message.action == 'options:load' then
            gameState.setRoute('options')
            load_proxy(self, '#game_options')

        elseif message.action == 'game:load' then
            gameState.setRoute('playing')
            load_proxy(self, '#game_proxy')

--        elseif message.action == 'game:settings' then
--            -- TODO: won't need this handler anymore after making the change above
--            msg.post('game:/guis#game', 'game:start')
----            load_proxy('#game_options')
        else
            print('Invalid: action => '..message.action)
        end
    end
end
